{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","className","href","onClick","Array","from","length","Math","ceil","map","_e","i","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","startItem","setStartItem","endItem","setEndItem","useEffect","id","onChange","event","target","value","htmlFor","newCurrentPage","item","ReactDOM","render","document","getElementById"],"mappings":"8KAUaA,EACX,SAAC,GAEI,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAc7B,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA+B,IAAhBF,EAAoB,WAAa,IAA7D,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QAEL,gBAA+B,IAAhBH,EACfI,QArBoB,WACtBJ,EAAc,GAChBC,EAAaD,EAAc,IAazB,oBAaAK,MAAMC,KAAK,CAAEC,OAAQC,KAAKC,KAAKX,EAAQC,KAAYW,KAAI,SAACC,EAAIC,GAAL,OAErD,aADA,CACA,MAGEV,UAAS,oBAAgBF,IAAgBY,EAAI,EAAK,SAAW,IAC7DR,QAAS,kBAAMH,EAAaW,EAAI,IAJlC,SAME,mBAAG,UAAQ,WAAWV,UAAU,YAAYC,KAAI,WAAMS,EAAI,GAA1D,SACGA,EAAI,KALFA,MAUX,oBAAIV,UAAS,oBAAeM,KAAKC,KAAKX,EAAQC,KAAaC,EAAc,WAAa,IAAtF,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QAEL,0BAAkBK,KAAKC,KAAKX,EAAQC,KAAaC,EAAc,OAAS,SACxEI,QA3CgB,WAClBI,KAAKC,KAAKX,EAAQC,GAAWC,GAC/BC,EAAaD,EAAc,IAmCzB,wBCpDFa,ECLC,SAAoBP,EAAcQ,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIV,EAAMU,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IAAIR,KAAI,SAACM,GAAD,qBAAeA,MAEtCG,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KACA,EAAkCF,oBAAUpB,EAAc,GAAKD,EAAU,GAAzE,mBAAOwB,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,mBAASpB,EAAcD,GAArD,mBAAO0B,EAAP,KAAgBC,EAAhB,KAWA,OALAC,qBAAU,WACRH,GAAcxB,EAAc,GAAKD,EAAU,GAC3C2B,EAAW1B,EAAcD,KACxB,CAACC,EAAaD,IAGf,sBAAKG,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWF,EADX,mBACiCuB,EADjC,cACgDE,EAAUZ,EAAMN,OAASM,EAAMN,OAASkB,EADxF,eACsGZ,EAAMN,OAD5G,OAIA,sBAAKL,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR0B,GAAG,kBACH1B,UAAU,eACV2B,SAAU,SAACC,GACTT,GAAYS,EAAMC,OAAOC,OACzBV,EAAe,IAEjBU,MAAOjC,EART,UAUE,wBAAQiC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkB/B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEJ,MAAOe,EAAMN,OACbR,SAAUA,EACVC,YAAaA,EACbC,aA7Ce,SAACiC,GACpBZ,EAAeY,MA8Cb,6BACGrB,EAAMH,KAAI,SAACyB,EAAMvB,GAChB,IAAMI,EAAIJ,GAAKZ,EAAc,GAAKD,EAElC,OAAIiB,GAAK,GAAKA,EAAIjB,EAEd,oBAAe,UAAQ,OAAvB,SACGoC,GADMA,GAMN,cErEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.838b238d.chunk.js","sourcesContent":["import React from 'react';\nimport '../../App.css';\n\ninterface PaginationProps {\n  total:number,\n  perPage:number,\n  currentPage:number,\n  onPageChange:(arg0:number)=>void,\n}\n\nexport const Pagination: React.FC<PaginationProps>\n= ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const handlePreviousClick = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (Math.ceil(total / perPage) > currentPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          // eslint-disable-next-line jsx-a11y/aria-proptypes\n          aria-disabled={currentPage === 1}\n          onClick={handlePreviousClick}\n        >\n          «\n        </a>\n      </li>\n      {\n\n        Array.from({ length: Math.ceil(total / perPage) }).map((_e, i) => (\n          // eslint-disable-next-line react/no-array-index-key, jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-element-interactions\n          <li\n            // eslint-disable-next-line react/no-array-index-key\n            key={i}\n            className={`page-item ${(currentPage === i + 1) ? 'active' : ''}`}\n            onClick={() => onPageChange(i + 1)}\n          >\n            <a data-cy=\"pageLink\" className=\"page-link\" href={`#${i + 1}`}>\n              {i + 1}\n            </a>\n          </li>\n        ))\n      }\n      <li className={`page-item ${Math.ceil(total / perPage) === currentPage ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          // eslint-disable-next-line jsx-a11y/aria-proptypes\n          aria-disabled={`${Math.ceil(total / perPage) === currentPage ? 'true' : 'false'}`}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map((n) => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [startItem, setStartItem] = useState((currentPage - 1) * perPage + 1);\n  const [endItem, setEndItem] = useState(currentPage * perPage);\n\n  const onPageChange = (newCurrentPage: number) => {\n    setCurrentPage(newCurrentPage);\n  };\n\n  useEffect(() => {\n    setStartItem((currentPage - 1) * perPage + 1);\n    setEndItem(currentPage * perPage);\n  }, [currentPage, perPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem > items.length ? items.length : endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={+perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {items.map((item, i) => {\n          const n = i - (currentPage - 1) * perPage;\n\n          if (n >= 0 && n < perPage) {\n            return (\n              <li key={item} data-cy=\"item\">\n                {item}\n              </li>\n            );\n          }\n\n          return null;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}